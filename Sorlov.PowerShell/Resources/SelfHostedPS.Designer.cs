//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sorlov.PowerShell.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SelfHostedPS {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SelfHostedPS() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Sorlov.PowerShell.Resources.SelfHostedPS", typeof(SelfHostedPS).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///
        ///namespace Sorlov.SelfHostedPS
        ///{
        ///    public class AssemblyData
        ///    {
        ///        public AssemblyData(System.Reflection.Assembly assembly)
        ///        {
        ///            if (assembly == null)
        ///                throw new ArgumentNullException(&quot;assembly&quot;);
        ///            this.assembly = assembly;
        ///        }
        ///
        ///        private readonly System.Reflection.Assembly assembly;
        ///
        ///        /// &lt;summary&gt;
        ///        /// Gets the title propert [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AssemblyData {
            get {
                return ResourceManager.GetString("AssemblyData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Reflection;
        ///
        /////[assembly: AssemblyTitle(&quot;$SCRIPTNAME$&quot;)]
        /////[assembly: AssemblyCompany(&quot;$COMPANY$&quot;)]
        /////[assembly: AssemblyDescription(&quot;$DESCRIPTION$&quot;)]
        /////[assembly: AssemblyProduct(&quot;$SCRIPTNAME$&quot;)]
        /////[assembly: AssemblyCopyright(&quot;$COPYRIGHT$&quot;)]
        /////[assembly: AssemblyVersion(&quot;$VERSION$&quot;)]
        /////[assembly: AssemblyFileVersion(&quot;$VERSION$&quot;)]
        /////[assembly: AssemblyCulture(&quot;$CULTURENAME$&quot;)].
        /// </summary>
        internal static string AssemblyInfo {
            get {
                return ResourceManager.GetString("AssemblyInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Specialized;
        ///using System.Linq;
        ///using System.Text.RegularExpressions;
        ///
        ///namespace Sorlov.SelfHostedPS
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Arguments class
        ///    /// &lt;/summary&gt;
        ///    public class Commandline
        ///    {
        ///        // Variables
        ///        private StringDictionary Parameters;
        ///
        ///        // Constructor
        ///        public Commandline(string[] Args)
        ///        {
        ///            Parameters = new StringDictionary();
        ///            Regex Spliter = new Regex(@&quot;^-{1,2}|^/|=|:&quot;,
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Commandline {
            get {
                return ResourceManager.GetString("Commandline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.IO;
        ///using System.IO.Compression;
        ///using System.Management.Automation.Runspaces;
        ///using System.Reflection;
        ///
        ///namespace Sorlov.SelfHostedPS
        ///{
        ///    public static class Common
        ///    {
        ///        public static void ExtractResource(string resourceName, string destinationFile)
        ///        {
        ///            Assembly assembly = Assembly.GetExecutingAssembly();
        ///
        ///            if (!System.IO.File.Exists(destinationFile))
        ///            {
        ///                using (St [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Common {
            get {
                return ResourceManager.GetString("Common", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Management.Automation.Host;
        ///using System.Runtime.InteropServices;
        ///
        ///namespace Sorlov.SelfHostedPS
        ///{
        ///    public static class ConsoleHandler
        ///    {
        ///        public class FakeConsoleData
        ///        {
        ///            public string WindowTitle = &quot;SelfHostedPS&quot;;
        ///            public Size WindowSize = new Size(80, 40);
        ///            public Size BufferSize = new Size(80, 40);
        ///            public int CursorSize;
        ///            public Coordinates WindowPosition = new Coordinates(0, 0);
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConsoleHandler {
            get {
                return ResourceManager.GetString("ConsoleHandler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Globalization;
        ///using System.Management.Automation.Host;
        ///using System.Threading;
        ///
        ///namespace Sorlov.SelfHostedPS.Application
        ///{
        ///    public class Host : PSHost
        ///    {
        ///        private PSHostUserInterface _psHostUserInterface = new HostUserInterface();
        ///
        ///        public override void SetShouldExit(int exitCode)
        ///        {
        ///            Environment.Exit(exitCode);
        ///        }
        ///
        ///        public override void EnterNestedPrompt()
        ///        {
        ///            throw new NotImplementedExcepti [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Host {
            get {
                return ResourceManager.GetString("Host", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Management.Automation.Host;
        ///
        ///namespace Sorlov.SelfHostedPS.Application
        ///{
        ///
        ///    public class HostRawUserInterface : PSHostRawUserInterface
        ///    {
        ///
        ///        
        ///        public override KeyInfo ReadKey(ReadKeyOptions options)
        ///        {
        ///            return ConsoleHandler.ReadKey(options);
        ///        }
        ///
        ///        public override void FlushInputBuffer()
        ///        {
        ///            ConsoleHandler.FlushInputBuffer();
        ///        }
        ///
        ///        public override void SetBufferContents(Coordinates  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HostRawUserInterface {
            get {
                return ResourceManager.GetString("HostRawUserInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Collections.ObjectModel;
        ///using System.Globalization;
        ///using System.Management.Automation;
        ///using System.Management.Automation.Host;
        ///using System.Runtime.InteropServices;
        ///using System.Security;
        ///using System.Text;
        ///
        ///namespace Sorlov.SelfHostedPS.Application
        ///{
        ///    class HostUserInterface : PSHostUserInterface, IHostUISupportsMultipleChoiceSelection
        ///    {
        ///        private PSHostRawUserInterface rawUserInterface = new HostRawUserInterface();        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HostUserInterface {
            get {
                return ResourceManager.GetString("HostUserInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Collections.Specialized;
        ///using System.Configuration.Install;
        ///using System.ServiceProcess;
        ///using System.Text;
        ///using System.Diagnostics;
        ///using Microsoft.Win32;
        ///
        ///namespace Sorlov.SelfHostedPS.Service
        ///{
        ///    public static class IntegratedServiceInstaller
        ///    {
        ///    	public static void Install(string path, string serviceName, string displayName, string description, ServiceAccount account, ServiceStartMode startMode, string username, string p [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string IntegratedServiceInstaller {
            get {
                return ResourceManager.GetString("IntegratedServiceInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///
        ///namespace Sorlov.SelfHostedPS
        ///{
        ///    public class ParameterItem
        ///    {
        ///        private string name;
        ///        private string helpText;
        ///        private bool mandatory;
        ///        private string type;
        ///
        ///        public ParameterItem(string name, string helpText, bool mandatory, string type)
        ///        {
        ///            this.name = name;
        ///            this.helpText = helpText;
        ///            this.mandatory = mandatory;
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ParameterItem {
            get {
                return ResourceManager.GetString("ParameterItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections;
        ///using System.Collections.Generic;
        ///using System.Collections.ObjectModel;
        ///using System.Linq;
        ///using System.Management.Automation;
        ///using System.Management.Automation.Language;
        ///using System.Management.Automation.Runspaces;
        ///using System.Runtime.InteropServices;
        ///using System.Text;
        ///using System.Windows.Forms;
        ///using System.Windows.Forms.VisualStyles;
        ///
        ///namespace Sorlov.SelfHostedPS.Application
        ///{
        ///    class Program
        ///    {
        ///        private static object psLocker;
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Program {
            get {
                return ResourceManager.GetString("Program", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.ServiceProcess;
        ///using Sorlov.SelfHostedPS.Application;
        ///using System.Threading;
        ///using System.Diagnostics;
        ///using System.Management.Automation.Runspaces;
        ///using System.Reflection;
        ///using System.Configuration.Install;
        ///
        ///namespace Sorlov.SelfHostedPS.Service
        ///{
        ///    public class PSService: ServiceBase
        ///    {
        ///
        ///        public static string PSServiceName = &quot;$SERVICENAME$&quot;;
        ///        public static string PSServiceDisplayName = &quot;$DISPLAYNAME$&quot;;
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PSService {
            get {
                return ResourceManager.GetString("PSService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Management.Automation.Runspaces;
        ///using System.Runtime.InteropServices;
        ///using System.ServiceProcess;
        ///
        ///namespace Sorlov.SelfHostedPS.Service
        ///{
        ///    public class Program
        ///    {
        ///        [DllImport(&quot;kernel32.dll&quot;, EntryPoint = &quot;AllocConsole&quot;, SetLastError = true, CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
        ///        private static extern int AllocConsole();
        ///
        ///        [DllImport(&quot;kernel32.dll&quot;, SetLastError = true, ExactSpelling = true)]
        ///        priva [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ServiceProgram {
            get {
                return ResourceManager.GetString("ServiceProgram", resourceCulture);
            }
        }
    }
}
